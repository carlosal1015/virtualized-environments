---
# [ TODO ] => move upx to a seperate workflow
name: "tools"
on:
  schedule:
    - cron: "0 0 * * *"
  push:
    paths:
      - "tools/**/Dockerfile"
      - ".github/workflows/tools.yml"
      - "builder/rust/alpine/*"
  workflow_dispatch:
jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      workflows: ${{ steps.filter.outputs.workflows }}
      upx: ${{ steps.filter.outputs.upx }}
      rust: ${{ steps.filter.outputs.rust }}
      clog: ${{ steps.filter.outputs.clog }}
      convco: ${{ steps.filter.outputs.convco }}
      jen: ${{ steps.filter.outputs.jen }}
      petname: ${{ steps.filter.outputs.petname }}
      tojson: ${{ steps.filter.outputs.tojson }}
      jsonfmt: ${{ steps.filter.outputs.jsonfmt }}
      just: ${{ steps.filter.outputs.just }}
      fd: ${{ steps.filter.outputs.fd }}
      exa: ${{ steps.filter.outputs.exa }}
      bat: ${{ steps.filter.outputs.bat }}
      tokei: ${{ steps.filter.outputs.tokei }}
      delta: ${{ steps.filter.outputs.delta }}
      skim: ${{ steps.filter.outputs.skim }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            workflows:
              - '.github/workflows/*.yml'
            rust:
              - 'builder/rust/alpine/**'
            upx:
              - 'tools/upx/**'
            clog:
              - 'tools/clog/**'
            convco:
              - 'tools/convco/**'
            jen:
              - 'tools/jen/**'
            petname:
              - 'tools/petname/**'
            tojson:
              - 'tools/tojson/**'
            just:
              - 'tools/just/**'
            fd:
              - 'tools/fd/**'
            exa:
              - 'tools/exa/**'
            bat:
              - 'tools/bat/**'
            tokei:
              - 'tools/tokei/**'
            delta:
              - 'tools/delta/**'
            skim:
              - 'tools/skim/**'

  upx:
    needs: changes
    if: ${{ github.event_name == 'schedule' || needs.changes.outputs.upx == 'true' || needs.changes.outputs.workflows == 'true' }}
    defaults:
      run:
        working-directory: ./tools/upx
    name: "build and push upx docker image"
    runs-on: ubuntu-18.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: "Login to Docker Container Repository"
        run: echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: "build docker image"
        shell: bash
        run: >
          set -ex &&
          bash build.sh
  convco:
    needs: [changes, upx]
    if: ${{ github.event_name == 'schedule' || needs.changes.outputs.upx == 'true' || needs.changes.outputs.rust == 'true' || needs.changes.outputs.convco == 'true'  || needs.changes.outputs.workflows == 'true' }}
    defaults:
      run:
        working-directory: ./tools/convco
    name: "build and push convco docker image"
    runs-on: ubuntu-18.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: "Login to Docker Container Repository"
        run: echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: "build docker image"
        shell: bash
        run: >
          set -ex &&
          bash build.sh
  clog:
    if: ${{ github.event_name == 'schedule' || needs.changes.outputs.upx == 'true' || needs.changes.outputs.rust == 'true' || needs.changes.outputs.clog == 'true'  || needs.changes.outputs.workflows == 'true' }}
    needs: [changes, upx]
    defaults:
      run:
        working-directory: ./tools/clog
    name: "build and push clog docker image"
    runs-on: ubuntu-18.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: "Login to Docker Container Repository"
        run: echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: "build docker image"
        shell: bash
        run: >
          set -ex &&
          bash build.sh
  jen:
    if: ${{ github.event_name == 'schedule' || needs.changes.outputs.upx == 'true' || needs.changes.outputs.rust == 'true' || needs.changes.outputs.jen == 'true'  || needs.changes.outputs.workflows == 'true' }}
    needs: [changes, upx]
    defaults:
      run:
        working-directory: ./tools/jen
    name: "build and push jen docker image"
    runs-on: ubuntu-18.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: "Login to Docker Container Repository"
        run: echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: "build docker image"
        shell: bash
        run: >
          set -ex &&
          bash build.sh
  petname:
    needs: [changes, upx]
    if: ${{ github.event_name == 'schedule' || needs.changes.outputs.upx == 'true' || needs.changes.outputs.rust == 'true' || needs.changes.outputs.petname == 'true'  || needs.changes.outputs.workflows == 'true' }}
    defaults:
      run:
        working-directory: ./tools/petname
    name: "build and push petname docker image"
    runs-on: ubuntu-18.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: "Login to Docker Container Repository"
        run: echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: "build docker image"
        shell: bash
        run: >
          set -ex &&
          bash build.sh
  tojson:
    needs: [changes, upx]
    if: ${{ github.event_name == 'schedule' || needs.changes.outputs.upx == 'true' || needs.changes.outputs.rust == 'true' || needs.changes.outputs.tojson == 'true'  || needs.changes.outputs.workflows == 'true' }}
    defaults:
      run:
        working-directory: ./tools/tojson
    name: "build and push tojson docker image"
    runs-on: ubuntu-18.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: "Login to Docker Container Repository"
        run: echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: "build docker image"
        shell: bash
        run: >
          set -ex &&
          bash build.sh
  jsonfmt:
    needs: [changes, upx]
    if: ${{ github.event_name == 'schedule' || needs.changes.outputs.upx == 'true' || needs.changes.outputs.rust == 'true' || needs.changes.outputs.jsonfmt == 'true'  || needs.changes.outputs.workflows == 'true' }}
    defaults:
      run:
        working-directory: ./tools/jsonfmt
    name: "build and push jsonfmt docker image"
    runs-on: ubuntu-18.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: "Login to Docker Container Repository"
        run: echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: "build docker image"
        shell: bash
        run: >
          set -ex &&
          bash build.sh
  just:
    needs: [changes, upx]
    if: ${{ github.event_name == 'schedule' || needs.changes.outputs.upx == 'true' || needs.changes.outputs.rust == 'true' || needs.changes.outputs.just == 'true'  || needs.changes.outputs.workflows == 'true' }}
    defaults:
      run:
        working-directory: ./tools/just
    name: "build and push just docker image"
    runs-on: ubuntu-18.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: "Login to Docker Container Repository"
        run: echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: "build docker image"
        shell: bash
        run: >
          set -ex &&
          bash build.sh
  fd:
    needs: [changes, upx]
    if: ${{ github.event_name == 'schedule' || needs.changes.outputs.upx == 'true' || needs.changes.outputs.rust == 'true' || needs.changes.outputs.fd == 'true'  || needs.changes.outputs.workflows == 'true' }}
    defaults:
      run:
        working-directory: ./tools/fd
    name: "build and push fd docker image"
    runs-on: ubuntu-18.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: "Login to Docker Container Repository"
        run: echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: "build docker image"
        shell: bash
        run: >
          set -ex &&
          bash build.sh
  exa:
    needs: [changes, upx]
    if: ${{ github.event_name == 'schedule' || needs.changes.outputs.upx == 'true' || needs.changes.outputs.rust == 'true' || needs.changes.outputs.exa == 'true'  || needs.changes.outputs.workflows == 'true' }}
    defaults:
      run:
        working-directory: ./tools/exa
    name: "build and push exa docker image"
    runs-on: ubuntu-18.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: "Login to Docker Container Repository"
        run: echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: "build docker image"
        shell: bash
        run: >
          set -ex &&
          bash build.sh
  bat:
    needs: [changes, upx]
    if: ${{ github.event_name == 'schedule' || needs.changes.outputs.upx == 'true' || needs.changes.outputs.rust == 'true' || needs.changes.outputs.bat == 'true'  || needs.changes.outputs.workflows == 'true' }}
    defaults:
      run:
        working-directory: ./tools/bat
    name: "build and push bat docker image"
    runs-on: ubuntu-18.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: "Login to Docker Container Repository"
        run: echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: "build docker image"
        shell: bash
        run: >
          set -ex &&
          bash build.sh
  tokei:
    needs: [changes, upx]
    if: ${{ github.event_name == 'schedule' || needs.changes.outputs.upx == 'true' || needs.changes.outputs.rust == 'true' || needs.changes.outputs.tokei == 'true'  || needs.changes.outputs.workflows == 'true' }}
    defaults:
      run:
        working-directory: ./tools/tokei
    name: "build and push tokei docker image"
    runs-on: ubuntu-18.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: "Login to Docker Container Repository"
        run: echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: "build docker image"
        shell: bash
        run: >
          set -ex &&
          bash build.sh
  delta:
    needs: [changes, upx]
    if: ${{ github.event_name == 'schedule' || needs.changes.outputs.upx == 'true' || needs.changes.outputs.rust == 'true' || needs.changes.outputs.delta == 'true'  || needs.changes.outputs.workflows == 'true' }}
    defaults:
      run:
        working-directory: ./tools/delta
    name: "build and push delta docker image"
    runs-on: ubuntu-18.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: "Login to Docker Container Repository"
        run: echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: "build docker image"
        shell: bash
        run: >
          set -ex &&
          bash build.sh
  skim:
    needs: [changes, upx]
    if: ${{ github.event_name == 'schedule' || needs.changes.outputs.upx == 'true' || needs.changes.outputs.rust == 'true' || needs.changes.outputs.skim == 'true'  || needs.changes.outputs.workflows == 'true' }}
    defaults:
      run:
        working-directory: ./tools/skim
    name: "build and push skim docker image"
    runs-on: ubuntu-18.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: "Login to Docker Container Repository"
        run: echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: "build docker image"
        shell: bash
        run: >
          set -ex &&
          bash build.sh
