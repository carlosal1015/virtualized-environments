image:
  file: .gp/Dockerfile

# [ NOTE ] =>
# - https://community.gitpod.io/t/knative-development-on-gitpod/2814/2
tasks:
  - name: "ssh public key setup"
    command: |
      find /workspace -not -group `id -g` -not -user `id -u` -print0 | sudo xargs -P 0 -0 --no-run-if-empty chown --no-dereference "`id -u`:`id -g`" ;
      find ~/ -not -group `id -g` -not -user `id -u` -print0 | sudo xargs -P 0 -0 --no-run-if-empty chown --no-dereference "`id -u`:`id -g`" ;
      while [ -z "$SSH_PUB_KEY" ] ; do \
      printf "\n❗ The SSH_PUB_KEY environment variable is required. Please enter its value.\n" ;
      read -s -p "SSH_PUB_KEY: " SSH_PUB_KEY ; \
      done ; gp env SSH_PUB_KEY=$SSH_PUB_KEY && printf "\nThanks\n" ;
      mkdir -p ~/.ssh ;
      echo "${SSH_PUB_KEY}" | tee ~/.ssh/authorized_keys > /dev/null ;
      chmod 700 ~/.ssh ;
      chmod 600 ~/.ssh/authorized_keys ;
      find /workspace -not -group `id -g` -not -user `id -u` -print0 | sudo xargs -P 0 -0 --no-run-if-empty chown --no-dereference "`id -u`:`id -g`" ;
      find ~/ -not -group `id -g` -not -user `id -u` -print0 | sudo xargs -P 0 -0 --no-run-if-empty chown --no-dereference "`id -u`:`id -g`" ;
      exit 0
  - name: "start chisel"
    command: |
      find /workspace -not -group `id -g` -not -user `id -u` -print0 | sudo xargs -P 0 -0 --no-run-if-empty chown --no-dereference "`id -u`:`id -g`" ;
      find ~/ -not -group `id -g` -not -user `id -u` -print0 | sudo xargs -P 0 -0 --no-run-if-empty chown --no-dereference "`id -u`:`id -g`" ;
      [ -f ~/chisel.pid ] && echo "*** killing chisel server" && kill -9 "$(cat ~/chisel.pid)" && rm -rf ~/chisel.pid ;
      pushd ~/ ;
      echo "*** starting chisel server" ;
      bash -c "chisel server --socks5 --pid > ~/chisel.log 2>&1 &" ;
      echo "*** chisel was started successfully" ;
      popd ;
      find /workspace -not -group `id -g` -not -user `id -u` -print0 | sudo xargs -P 0 -0 --no-run-if-empty chown --no-dereference "`id -u`:`id -g`" ;
      find ~/ -not -group `id -g` -not -user `id -u` -print0 | sudo xargs -P 0 -0 --no-run-if-empty chown --no-dereference "`id -u`:`id -g`" ;
      exit 0
  - name: "start dropbear"
    command: |
      find /workspace -not -group `id -g` -not -user `id -u` -print0 | sudo xargs -P 0 -0 --no-run-if-empty chown --no-dereference "`id -u`:`id -g`" ;
      find ~/ -not -group `id -g` -not -user `id -u` -print0 | sudo xargs -P 0 -0 --no-run-if-empty chown --no-dereference "`id -u`:`id -g`" ;
      [ ! -f ~/dropbear.hostkey ] && echo "*** generating dropbear host key" && dropbearkey -t rsa -f ~/dropbear.hostkey ;
      [ -f ~/dropbear.pid ] && echo "*** killing dropbear server" && kill -9 "$(cat ~/dropbear.pid)" && rm -rf ~/dropbear.pid ;
      echo "*** starting dropbear server" ;
      bash -c "dropbear -r ~/dropbear.hostkey -F -E -s -p 2222 -P ~/dropbear.pid > ~/dropbear.log 2>&1 &" ;
      echo "*** dropbear server was started successfully" ;
      find /workspace -not -group `id -g` -not -user `id -u` -print0 | sudo xargs -P 0 -0 --no-run-if-empty chown --no-dereference "`id -u`:`id -g`" ;
      find ~/ -not -group `id -g` -not -user `id -u` -print0 | sudo xargs -P 0 -0 --no-run-if-empty chown --no-dereference "`id -u`:`id -g`"
      exit 0
  - name: "welcome"
    command: |
      echo "*** ensuring gitpod user is part of docker group" ;
      sudo usermod -aG docker gitpod ;
      find /workspace -not -group `id -g` -not -user `id -u` -print0 | sudo xargs -P 0 -0 --no-run-if-empty chown --no-dereference "`id -u`:`id -g`" ;
      find ~/ -not -group `id -g` -not -user `id -u` -print0 | sudo xargs -P 0 -0 --no-run-if-empty chown --no-dereference "`id -u`:`id -g`" ;
      echo "*** preparing ssh config" ;
      cat << EOF | tee ~/ssh_config
      Host $(gp url | sed -e 's/https:\/\///g' -e 's/[.].*$//g')
        HostName localhost
        User gitpod
        Port 2222
        ProxyCommand chisel client $(gp url 8080) stdio:%h:%p
        IdentityFile ~/Documents/ssh-backup/id_rsa
        IdentitiesOnly yes
        StrictHostKeyChecking no
        CheckHostIP no
        MACs hmac-sha2-512
        UserKnownHostsFile /dev/null
      EOF
ports:
  # [ NOTE ] => for chisel
  - port: 8080
    onOpen: ignore
  # [ NOTE ] => for dropbear
  - port: 2222
    onOpen: ignore
vscode:
  extensions:
    - ms-azuretools.vscode-docker@1.8.1:xuHtLS23Q5czFwYH7grcCQ==
